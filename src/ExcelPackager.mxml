<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication 
	width="600" height="520"
	creationComplete="onCreateComplete(event)"
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" invoke="onInvoke(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import utils.Packager;
			import utils.formatString;
			/**
			 * 上次的config路径
			 * */
			private var lastSettings:Array;
			
			private var fromFile:File;
			private var toFile:File;
			
			/**
			 * 不带窗体的打包程序，适合用cmd，或ant调用，需要带两个参数
			 * 0：要打包的数据文件夹的路径
			 * 1：输出保存最终的路径
			 * 
			 * 带窗体的打包程序。这里主要是选择目录，拖拽文件之类的
			 * */
			protected function onCreateComplete(event:FlexEvent):void
			{
				var storage:File = File.applicationStorageDirectory.resolvePath("storage.txt");
				if(storage.exists)
				{
					var fileBytes:ByteArray = new ByteArray();
					var stream:FileStream = new FileStream();
					stream.open(storage, FileMode.READ);
					stream.readBytes(fileBytes);
					stream.close();
					var text:String = fileBytes.readUTFBytes(fileBytes.bytesAvailable);
					lastSettings = text.split("\r\n");
					packageWithLastSettings.visible = true;
					packageWithLastSettings.toolTip = "使用上次的路径打包\r\n" + lastSettings.join("\r\n");
				}
				
				
				this.addEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, onDragIn);
				this.addEventListener(NativeDragEvent.NATIVE_DRAG_DROP, onDrop);
			}
			
			protected function onDragIn(event:NativeDragEvent):void
			{
				NativeDragManager.acceptDragDrop(this);
			}
			
			protected function onDrop(event:NativeDragEvent):void
			{
				NativeDragManager.dropAction = NativeDragActions.COPY;
				var dropFile:File = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT)[0];
				if (!dropFile)
				{
					Alert.show("你搞错了？");
				}
				fromFile = dropFile.isDirectory ? dropFile : dropFile.parent;
				selectToFile();
			}
			
			/**
			 * 选择源目录
			 */
			private function selectFromFile():void
			{
				if (!fromFile)
				{
					fromFile = new File;
					fromFile.addEventListener(Event.SELECT, selectToFile);
				}
				fromFile.browseForDirectory('选择存放数据文件的目录');
			}
			
			/**
			 * 选择目标文件
			 */
			private function selectToFile(... rest):void
			{
				if (!toFile)
				{
					toFile = new File;
					toFile.addEventListener(Event.SELECT, packageData);
				}
				toFile.browseForSave("保存生成的数据文件到");
			}
			
			private function packageData(... rest):void
			{
				Packager.write(fromFile, toFile);
				var url:String = toFile.url.slice(0, toFile.url.lastIndexOf('/') + 1);
				msgTxt.textFlow = TextConverter.importToFlow(
					'转换完成到：' + toFile.nativePath + '，<a href="' + url
					+ '">点此打开所在目录</a>', TextConverter.TEXT_FIELD_HTML_FORMAT);
				
				lastSettings = [fromFile.nativePath, toFile.nativePath];
				var storage:File = File.applicationStorageDirectory.resolvePath("storage.txt");
				var stream2:FileStream = new FileStream();
				stream2.open(storage, FileMode.WRITE);
				var text:String = formatString("{0}\r\n{1}", lastSettings[0], lastSettings[1]);
				stream2.writeUTFBytes(text);
				stream2.close();
				packageWithLastSettings.visible = true;
				packageWithLastSettings.toolTip = "使用上次的路径打包\r\n" + lastSettings.join("\r\n");
			}
			
			/**
			 * command line
			 * */
			protected function onInvoke(event:InvokeEvent):void
			{
				if (event.arguments.length >= 2)
				{
					visible = false;
					Packager.write(new File(event.arguments[0]), new File(event.arguments[1]));
					this.exit();
				}
			}
			
			private function packageDataHandler():void
			{
				fromFile = new File(lastSettings[0]);
				toFile = new File(lastSettings[1]);
				Packager.write(fromFile, toFile);
				var url:String = toFile.url.slice(0, toFile.url.lastIndexOf('/') + 1);
				msgTxt.textFlow = TextConverter.importToFlow(
					'转换完成到：' + toFile.nativePath + '，<a href="' + url
					+ '">点此打开所在目录</a>', TextConverter.TEXT_FIELD_HTML_FORMAT);
			}
			
		]]>
	</fx:Script>
	<s:VGroup 
		y="100" width="100%"
		horizontalAlign="center"
		gap="50">
		<s:RichEditableText id="msgTxt"
							width="300"
							fontFamily="宋体"
							fontSize="15"
							text="拖进配置文件夹或里面的任意文件，或者点击按钮选择存放数据配置的文件夹&#13;然后保存文件。"
							editable="false"/>
		<s:Label width="300"
				 fontFamily="宋体" color="#666666"
				 fontSize="15"
				 text="策划需要将数据放在第一个sheet中，并且第1行为标题备注，第2行为数据类型，第3行为变量名（只能包含字母和下划线），真正打包数据是从第4行开始，前3行会被忽略。"/>
		<s:Button 
			width="300" height="50" color="#119977"
			fontFamily="宋体"
			fontSize="30"
			label="选择数据目录打包"
			click="selectFromFile()"/>
		<s:Button id="packageWithLastSettings" visible="false" color="#ff6622"
			width="300" height="50"
			fontFamily="宋体"
			fontSize="30"
			label="使用上次的路径打包" toolTip="使用上次的路径打包"
			click="packageDataHandler()"/>
	</s:VGroup>
</s:WindowedApplication>
